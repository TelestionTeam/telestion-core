java {
    withJavadocJar()
    withSourcesJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

ext {
    prettyName = 'Telestion Services'
}

description = 'Services and service components that are re-usable in any Telestion Project Application'

dependencies {
    implementation project(':modules:telestion-api')

    implementation group: 'com.fazecast', name: 'jSerialComm', version: '2.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation "org.mockito:mockito-core:4.+"

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.1.1'

    implementation "io.vertx:vertx-web:4.2.7"
    implementation "io.vertx:vertx-core:4.2.7"
    implementation "io.vertx:vertx-hazelcast:4.2.7"
    implementation "io.vertx:vertx-health-check:4.2.7"
    implementation "io.vertx:vertx-rx-java2:4.2.7"
    implementation "io.vertx:vertx-config:4.2.7"
    implementation "io.vertx:vertx-service-factory:4.2.7"
    implementation "io.vertx:vertx-mongo-client:4.2.7"
    implementation "io.vertx:vertx-circuit-breaker:4.2.7"

    testImplementation "io.vertx:vertx-junit5:4.2.7"
}

test {
    useJUnitPlatform()
}
