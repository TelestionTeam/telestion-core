allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'maven-publish'

    sourceCompatibility = gradle.sourceCompatibility
    targetCompatibility = gradle.targetCompatibility

    version = System.getenv("VERSION")
    group 'de.wuespace.telestion'

    javadoc {
        options.addBooleanOption('html5', true)
    }

    tasks.withType(JavaExec) {
        systemProperties System.properties
        systemProperties "hazelcast.logging.type": "slf4j"

        // enable modules for hazelcast
        jvmArgs += ["--add-modules", "java.se",
                    "--add-exports", "java.base/jdk.internal.ref=ALL-UNNAMED",
                    "--add-opens", "java.base/java.lang=ALL-UNNAMED",
                    "--add-opens", "java.base/java.nio=ALL-UNNAMED",
                    "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
                    "--add-opens", "java.management/sun.management=ALL-UNNAMED",
                    "--add-opens", "jdk.management/com.sun.management.internal=ALL-UNNAMED"]
    }
}



task alljavadoc(type: Javadoc) {
    def subProjects = gradle.rootProject.subprojects
    source subProjects.collect { it.sourceSets.main.allJava }
    classpath = files(subProjects.collect { it.sourceSets.main.compileClasspath })
    //options.memberLevel = JavadocMemberLevel.PRIVATE
    //classpath = configurations.compile
    destinationDir = file("${buildDir}/docs/javadoc")
}

configure(alljavadoc) {
    group = 'documentation'
    description = 'Generates Javadoc API for all subprojects into one destination.'
}
